pipeline {
    agent any // Utiliza el agente principal que ya tiene Docker instalado

    environment {
        
        DOCKERFILE_PATH = 'jenkins/agent/deploy/Dockerfile' // La ubicacion de tu Dockerfile en el repositorio
        //DOCKER_AGENT_IMAGE = 'ocaagent:latest' // El nombre de la imagen que deseas construir
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {                   
                    docker.build(env.DOCKER_AGENT_IMAGE, "-f ${env.DOCKERFILE_PATH} .")
                }
            }
        }

        stage('Preparation') {
            steps {
                // Recuperar el código fuente del repositorio SCM configurado
                checkout scm
                
                // Guardar archivos para su uso posterior en el pipeline
                //stash name: 'source', includes: '**', excludes: '**/.terraform/**,ansible/roles/connect-direct/files/CDFtp_1.1.15_LinuxINTEL_16032010'
                stash name: "source-${env.GIT_COMMIT}", includes: '**', excludes: '**/.terraform/**,ansible/roles/connect-direct/files/CDFtp_1.1.15_LinuxINTEL_16032010'

            }
        }

        stage('Test Tools Version') {
            agent {
                docker {
                    image "${env.DOCKER_AGENT_IMAGE}" // Utiliza la imagen que construiste
                    args '-u root' // Ejecuta como root si es necesario
                }
            }
            steps {
                //unstash name: "$checkoutInfo.GIT_COMMIT"
                unstash "$checkoutInfo.GIT_COMMIT"

                // Ejecuta aws --version
                sh 'aws --version'
                
                // Ejecuta terraform version
                sh 'terraform version'
            }
        }   
    }
    post {
        always {
            
            echo 'Cleaning up...'
             // Pasos de limpieza si son necesarios, como eliminar la imagen de Docker después del build
            // script {
            //     docker.image("my-image-name:${env.BUILD_ID}").remove()
            // }
            
        }
    }
}
